using ItemGenerator.Domain.Common;
using ItemGenerator.Domain.ValueObjects;
using static ItemGenerator.Domain.Enumerations.AffixType;
using static ItemGenerator.Domain.Enumerations.ItemType;
using static ItemGenerator.Domain.Enumerations.ModifierType;
using static ItemGenerator.Domain.Enumerations.Rarity;

namespace ItemGenerator.Domain.Enumerations;

public sealed class AffixRange : Enumeration<AffixRange>
{
    public readonly AffixClass AffixClass;
    public readonly ModifierRange[] Modifiers;
    public readonly AffixConstraints Constraints;
    private AffixRange(
        byte value,
        string name,
        AffixClass affixClass,
        ModifierRange[] itemModifiers,
        AffixConstraints constraints)
        : base(value, name)
    {
        AffixClass = affixClass;
        Modifiers = itemModifiers;
        Constraints = constraints;
    }
    public static readonly AffixRange Mechanics = new(0, "Mechanic's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, 1, 2) }, new AffixConstraints(Prefix, Rare, 10, BodyArmor, HelmType, ShieldType, WeaponType));
    public static readonly AffixRange Artisans = new(1, "Artisan's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, 3, 3) }, new AffixConstraints(Prefix, Magic, 33, BodyArmor, HelmType, ShieldType, WeaponType));
    public static readonly AffixRange Jewelers1 = new(2, "Jeweler's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, 4, 4) }, new AffixConstraints(Prefix, Magic, 55, BodyArmor, ShieldType, WeaponType));
    public static readonly AffixRange Jewelers2 = new(3, "Jeweler's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, 3, 3) }, new AffixConstraints(Prefix, Magic, 55, HelmType));
    public static readonly AffixRange Bronze1 = new(4, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 2, 4) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Bronze2 = new(5, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 6, 12) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Bronze3 = new(6, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 10, 20) }, new AffixConstraints(Prefix, Rare, 1, Amulet, Circlet, Gloves, Ring, WeaponType));
    public static readonly AffixRange Bronze4 = new(7, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 4, 8) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Bronze5 = new(9, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 6, 12) }, new AffixConstraints(Prefix, Magic, 7, CharmLarge));
    public static readonly AffixRange Bronze6 = new(10, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 13, 25) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Bronze7 = new(11, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 6, 12) }, new AffixConstraints(Prefix, Magic, 1, CharmGrand));
    public static readonly AffixRange Bronze8 = new(12, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 13, 27) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Bronze9 = new(13, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 28, 42) }, new AffixConstraints(Prefix, Magic, 13, CharmGrand));
    public static readonly AffixRange Iron1 = new(156, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 13, 24) }, new AffixConstraints(Prefix, Magic, 39, CharmSmall));
    public static readonly AffixRange Iron2 = new(157, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 21, 40) }, new AffixConstraints(Prefix, Rare, 4, Circlet, Ring, WeaponType));
    public static readonly AffixRange Iron3 = new(14, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 26, 38) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Iron4 = new(15, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 39, 51) }, new AffixConstraints(Prefix, Magic, 34, CharmLarge));
    public static readonly AffixRange Iron5 = new(16, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 43, 57) }, new AffixConstraints(Prefix, Magic, 19, CharmGrand));
    public static readonly AffixRange Iron6 = new(17, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 58, 72) }, new AffixConstraints(Prefix, Magic, 25, CharmGrand));
    public static readonly AffixRange Iron7 = new(18, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 73, 87) }, new AffixConstraints(Prefix, Magic, 31, CharmGrand));
    public static readonly AffixRange Steel1 = new(19, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 25, 36) }, new AffixConstraints(Prefix, Magic, 57, CharmGrand));
    public static readonly AffixRange Steel2 = new(20, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 41, 60) }, new AffixConstraints(Prefix, Rare, 8, Circlet, Ring, WeaponType));
    public static readonly AffixRange Steel3 = new(21, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 52, 64) }, new AffixConstraints(Prefix, Magic, 43, CharmLarge));
    public static readonly AffixRange Steel4 = new(22, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 65, 77) }, new AffixConstraints(Prefix, Magic, 52, CharmLarge));
    public static readonly AffixRange Steel5 = new(23, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 88, 102) }, new AffixConstraints(Prefix, Magic, 37, CharmGrand));
    public static readonly AffixRange Steel6 = new(24, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 103, 117) }, new AffixConstraints(Prefix, Magic, 43, CharmGrand));
    public static readonly AffixRange Steel7 = new(25, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 118, 132) }, new AffixConstraints(Prefix, Magic, 49, CharmGrand));
    public static readonly AffixRange Silver1 = new(26, "Silver", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 41, 60) }, new AffixConstraints(Prefix, Rare, 25, Jewel));
    public static readonly AffixRange Silver2 = new(27, "Silver", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 61, 80) }, new AffixConstraints(Prefix, Rare, 12, Circlet, Ring, WeaponType));
    public static readonly AffixRange Gold = new(28, "Gold", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 81, 100) }, new AffixConstraints(Prefix, Rare, 17, Circlet, Ring, WeaponType));
    public static readonly AffixRange Platinum = new(29, "Platinum", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 101, 120) }, new AffixConstraints(Prefix, Rare, 22, Circlet, Ring, WeaponType));
    public static readonly AffixRange Meteoric = new(30, "Meteoric", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 121, 150) }, new AffixConstraints(Prefix, Rare, 49, WeaponType));
    public static readonly AffixRange Strange = new(31, "Strange", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 151, 300) }, new AffixConstraints(Prefix, Rare, 49, WeaponType));
    public static readonly AffixRange Weird = new(32, "Weird", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 301, 450) }, new AffixConstraints(Prefix, Magic, 49, WeaponType));
    public static readonly AffixRange Tin = new(33, "Tin", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 21, 40) }, new AffixConstraints(Prefix, Rare, 49, Jewel));
    public static readonly AffixRange Argent = new(34, "Argent", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 61, 100) }, new AffixConstraints(Prefix, Magic, 49, Jewel));
    public static readonly AffixRange Hawkeye = new(35, "Hawkeye", AffixClass.AttackRatingBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingBasedOnCharacterLevel, 150, 150) }, new AffixConstraints(Prefix, Magic, 35, WeaponType)); // 1.5 not 15
    public static readonly AffixRange Visionary = new(36, "Visionary", AffixClass.AttackRatingPercentBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingPercentBasedOnCharacterLevel, 100, 100) }, new AffixConstraints(Prefix, Rare, 25, HelmType, MissileType));
    public static readonly AffixRange Sharp1 = new(37, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 10, 20), new(DamageEnhanced, 10, 20) }, new AffixConstraints(Prefix, Rare, 5, WeaponType));
    public static readonly AffixRange Sharp2 = new(38, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 21, 48), new(DamagePhysicalMax, 4, 6) }, new AffixConstraints(Prefix, Magic, 28, CharmLarge));
    public static readonly AffixRange Sharp3 = new(39, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 49, 76), new(DamagePhysicalMax, 7, 10) }, new AffixConstraints(Prefix, Magic, 29, CharmGrand));
    public static readonly AffixRange Fine1 = new(40, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 49, 76), new(DamagePhysicalMax, 7, 10) }, new AffixConstraints(Prefix, Magic, 19, CharmLarge));
    public static readonly AffixRange Fine2 = new(50, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 49, 76), new(DamagePhysicalMax, 7, 10) }, new AffixConstraints(Prefix, Magic, 28, CharmSmall));
    public static readonly AffixRange Fine3 = new(51, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 21, 40), new(DamageEnhanced, 21, 30) }, new AffixConstraints(Prefix, Rare, 12, WeaponType));
    public static readonly AffixRange Fine4 = new(52, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 10, 20), new(DamagePhysicalMax, 1, 3) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Fine5 = new(53, "Sharp", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 21, 48), new(DamagePhysicalMax, 4, 6) }, new AffixConstraints(Prefix, Magic, 22, CharmGrand));
    public static readonly AffixRange Warriors = new(54, "Warrior's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 41, 60), new(DamageEnhanced, 31, 40) }, new AffixConstraints(Prefix, Rare, 19, WeaponType));
    public static readonly AffixRange Soldiers = new(55, "Soldier's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 61, 80), new(DamageEnhanced, 41, 50) }, new AffixConstraints(Prefix, Rare, 27, WeaponType));
    public static readonly AffixRange Knights = new(56, "Knight's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 81, 100), new(DamageEnhanced, 51, 65) }, new AffixConstraints(Prefix, Rare, 38, WeaponType));
    public static readonly AffixRange Lords = new(57, "Lord's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 101, 120), new(DamageEnhanced, 66, 80) }, new AffixConstraints(Prefix, Rare, 47, WeaponType));
    public static readonly AffixRange Kings = new(58, "King's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 121, 150), new(DamageEnhanced, 81, 100) }, new AffixConstraints(Prefix, Rare, 56, WeaponType));
    public static readonly AffixRange Masters = new(59, "Master's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 151, 250), new(DamageEnhanced, 101, 150) }, new AffixConstraints(Prefix, Rare, 56, WeaponType));
    public static readonly AffixRange GrandMasters = new(60, "GrandMaster's", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, 151, 250), new(DamageEnhanced, 101, 150) }, new AffixConstraints(Prefix, Magic, 69, WeaponType));
    public static readonly AffixRange Fools = new(61, "Fool's", AffixClass.AttackRatingAndDamageBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingBasedOnCharacterLevel, 1650, 1650), new(DamagePhysicalMaxBasedOnCharacterLevel, 50, 50) }, new AffixConstraints(Prefix, Rare, 50, WeaponType));
    public static readonly AffixRange Lunar = new(62, "Lunar", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 25, 50), new(DamageEnhancedVsDemons, 10, 25) }, new AffixConstraints(Prefix, Rare, 3, Circlet, WeaponType));
    public static readonly AffixRange Diamond = new(63, "Diamond", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 25, 50), new(DamageEnhancedVsDemons, 25, 40) }, new AffixConstraints(Prefix, Rare, 26, Jewel));
    public static readonly AffixRange Arcadian = new(64, "Arcadian", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 51, 100), new(DamageEnhancedVsDemons, 26, 50) }, new AffixConstraints(Prefix, Rare, 15, Circlet, WeaponType));
    public static readonly AffixRange Unearthly = new(65, "Unearthly", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 101, 150), new(DamageEnhancedVsDemons, 51, 100) }, new AffixConstraints(Prefix, Rare, 25, WeaponType));
    public static readonly AffixRange Astral = new(66, "Astral", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 151, 200), new(DamageEnhancedVsDemons, 101, 151) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Elysian = new(67, "Elysian", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 201, 300), new(DamageEnhancedVsDemons, 151, 200) }, new AffixConstraints(Prefix, Rare, 45, WeaponType));
    public static readonly AffixRange Celestial = new(68, "Celestial", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, 301, 400), new(DamageEnhancedVsDemons, 201, 300) }, new AffixConstraints(Prefix, Magic, 55, WeaponType));
    public static readonly AffixRange Pearl = new(69, "Pearl", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 25, 50), new(DamageEnhancedVsUndead, 25, 50) }, new AffixConstraints(Prefix, Rare, 1, Jewel));
    public static readonly AffixRange Consecrated = new(70, "Consecrated", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 25, 75), new(DamageEnhancedVsUndead, 25, 75) }, new AffixConstraints(Prefix, Rare, 15, WeaponType));
    public static readonly AffixRange Pure = new(71, "Pure", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 76, 175), new(DamageEnhancedVsUndead, 76, 125) }, new AffixConstraints(Prefix, Rare, 25, WeaponType));
    public static readonly AffixRange Sacred = new(72, "Sacred", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 176, 250), new(DamageEnhancedVsUndead, 126, 200) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Hallowed = new(73, "Hallowed", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 251, 325), new(DamageEnhancedVsUndead, 201, 275) }, new AffixConstraints(Prefix, Rare, 45, WeaponType));
    public static readonly AffixRange Divine = new(74, "Divine", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, 326, 450), new(DamageEnhancedVsUndead, 276, 350) }, new AffixConstraints(Prefix, Magic, 55, WeaponType));
    public static readonly AffixRange Sturdy1 = new(75, "Sturdy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 10, 20) }, new AffixConstraints(Prefix, Rare, 1, ArmorType));
    public static readonly AffixRange Sturdy2 = new(76, "Sturdy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 21, 30) }, new AffixConstraints(Prefix, Rare, 4, ArmorType));
    public static readonly AffixRange Strong = new(77, "Strong", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 31, 40) }, new AffixConstraints(Prefix, Rare, 9, ArmorType));
    public static readonly AffixRange Glorious = new(78, "Glorious", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 41, 50) }, new AffixConstraints(Prefix, Rare, 19, ArmorType));
    public static readonly AffixRange Blessed = new(79, "Blessed", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 51, 65)}, new AffixConstraints(Prefix, Rare, 25, ArmorType));
    public static readonly AffixRange Saintly = new(80, "Saintly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 66, 80) }, new AffixConstraints(Prefix, Rare, 31, ArmorType));
    public static readonly AffixRange Holy = new(81, "Holy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 81, 100) }, new AffixConstraints(Prefix, Rare, 36, ArmorType));
    public static readonly AffixRange Godly1 = new(82, "Godly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 101, 200) }, new AffixConstraints(Prefix, Rare, 50, ArmorType));
    public static readonly AffixRange Godly2 = new(83, "Godly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, 101, 200) }, new AffixConstraints(Prefix, Magic, 45, ArmorType));
    public static readonly AffixRange Stout1 = new(84, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 1, 1) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Stout2 = new(85, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 4, 8) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Stout3 = new(86, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 2, 3) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Stout4 = new(87, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 4, 6) }, new AffixConstraints(Prefix, Magic, 14, CharmLarge));
    public static readonly AffixRange Stout5 = new(88, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 8, 12) }, new AffixConstraints(Prefix, Magic, 20, CharmLarge));
    public static readonly AffixRange Stout6 = new(89, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 3, 5) }, new AffixConstraints(Prefix, Magic, 1, CharmGrand));
    public static readonly AffixRange Stout7 = new(90, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 6, 9) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Stout8 = new(91, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, 10, 12) }, new AffixConstraints(Prefix, Magic, 12, CharmGrand));
    public static readonly AffixRange Burly1 = new(92, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 15, 20) }, new AffixConstraints(Prefix, Magic, 36, CharmSmall));
    public static readonly AffixRange Burly2 = new(93, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 13, 18) }, new AffixConstraints(Prefix, Magic, 26, CharmLarge));
    public static readonly AffixRange Burly3 = new(94, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 20, 30) }, new AffixConstraints(Prefix, Magic, 32, CharmLarge));
    public static readonly AffixRange Burly4 = new(95, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 13, 15) }, new AffixConstraints(Prefix, Magic, 17, CharmGrand));
    public static readonly AffixRange Burly5 = new(96, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 16, 22) }, new AffixConstraints(Prefix, Magic, 22, CharmGrand));
    public static readonly AffixRange Burly6 = new(97, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, 23, 30) }, new AffixConstraints(Prefix, Magic, 27, CharmGrand));
    public static readonly AffixRange Stalwart1 = new(98, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 20, 30) }, new AffixConstraints(Prefix, Magic, 48, CharmSmall));
    public static readonly AffixRange Stalwart2 = new(99, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 30, 40) }, new AffixConstraints(Prefix, Magic, 38, CharmLarge));
    public static readonly AffixRange Stalwart3 = new(100, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 45, 60) }, new AffixConstraints(Prefix, Magic, 45, CharmLarge));
    public static readonly AffixRange Stalwart4 = new(101, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 33, 40) }, new AffixConstraints(Prefix, Magic, 32, CharmGrand));
    public static readonly AffixRange Stalwart5 = new(102, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 44, 50) }, new AffixConstraints(Prefix, Magic, 37, CharmGrand));
    public static readonly AffixRange Stalwart6 = new(103, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, 60, 100) }, new AffixConstraints(Prefix, Magic, 42, CharmGrand));
    public static readonly AffixRange Blanched = new(104, "Blanched", AffixClass.Defense, new ModifierRange[] { new(Defense, 5, 8) }, new AffixConstraints(Prefix, Rare, 1, Jewel));
    public static readonly AffixRange Eburine = new(105, "Eburine", AffixClass.Defense, new ModifierRange[] { new(Defense, 9, 20) }, new AffixConstraints(Prefix, Rare, 16, Jewel));
    public static readonly AffixRange Bone = new(106, "Bone", AffixClass.Defense, new ModifierRange[] { new(Defense, 21, 40) }, new AffixConstraints(Prefix, Rare, 32, Jewel));
    public static readonly AffixRange Ivory = new(107, "Ivory", AffixClass.Defense, new ModifierRange[] { new(Defense, 41, 64) }, new AffixConstraints(Prefix, Magic, 64, Jewel));
    public static readonly AffixRange Faithful1 = new(108, "Faithful", AffixClass.DefenseBasedOnCharacterLevel, new ModifierRange[] { new(DefenseBasedOnCharacterLevel, 300, 300) }, new AffixConstraints(Prefix, Rare, 30, BodyArmor));
    public static readonly AffixRange Faithful2 = new(109, "Faithful", AffixClass.DefenseBasedOnCharacterLevel, new ModifierRange[] { new(DefenseBasedOnCharacterLevel, 50, 50) }, new AffixConstraints(Prefix, Rare, 30, Belt, Boots, Gloves, ShieldType));
    public static readonly AffixRange Snowy1 = new(110, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 1, 1), new(DamageColdMax, 2, 3) }, new AffixConstraints(Prefix, Magic, 9, CharmGrand));
    public static readonly AffixRange Snowy2 = new(111, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 1, 2), new(DamageColdMax, 2, 4) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Snowy3 = new(112, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 2, 3), new(DamageColdMax, 3, 5) }, new AffixConstraints(Prefix, Magic, 18, CharmLarge));
    public static readonly AffixRange Snowy4 = new(113, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 6, 9), new(DamageColdMax, 19, 30) }, new AffixConstraints(Prefix, Rare, 26, Circlet, WeaponType));
    public static readonly AffixRange Shivering1 = new(114, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 2, 4), new(DamageColdMax, 4, 8) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Shivering2 = new(115, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 3, 4), new(DamageColdMax, 5, 8) }, new AffixConstraints(Prefix, Magic, 42, CharmSmall));
    public static readonly AffixRange Shivering3 = new(116, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 4, 5), new(DamageColdMax, 6, 10) }, new AffixConstraints(Prefix, Magic, 29, CharmLarge));
    public static readonly AffixRange Shivering4 = new(117, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 10, 15), new(DamageColdMax, 31, 45) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Boreal1 = new(118, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 5, 7), new(DamageColdMax, 9, 14) }, new AffixConstraints(Prefix, Magic, 66, CharmSmall));
    public static readonly AffixRange Boreal2 = new(119, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 5, 7), new(DamageColdMax, 9, 15) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Boreal3 = new(120, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 6, 10), new(DamageColdMax, 11, 20) }, new AffixConstraints(Prefix, Magic, 49, CharmLarge));
    public static readonly AffixRange Boreal4 = new(121, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 16, 23), new(DamageColdMax, 46, 90) }, new AffixConstraints(Prefix, Rare, 50, WeaponType));
    public static readonly AffixRange Hibernal1 = new(122, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 8, 10), new(DamageColdMax, 15, 20) }, new AffixConstraints(Prefix, Magic, 91, CharmSmall));
    public static readonly AffixRange Hibernal2 = new(123, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 8, 13), new(DamageColdMax, 16, 25) }, new AffixConstraints(Prefix, Magic, 45, CharmGrand));
    public static readonly AffixRange Hibernal3 = new(124, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 11, 15), new(DamageColdMax, 21, 30) }, new AffixConstraints(Prefix, Magic, 69, CharmLarge));
    public static readonly AffixRange Hibernal4 = new(125, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageColdMin, 24, 45), new(DamageColdMax, 91, 140) }, new AffixConstraints(Prefix, Rare, 70, WeaponType));
    public static readonly AffixRange Ember1 = new(126, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 1, 1), new(DamageFireMax, 2, 3) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Ember2 = new(127, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 1, 1), new(DamageFireMax, 2, 3) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Ember3 = new(128, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 1, 1), new(DamageFireMax, 2, 3) }, new AffixConstraints(Prefix, Magic, 13, CharmLarge));
    public static readonly AffixRange Fiery = new(129, "Fiery", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 16, 25), new(DamageFireMax, 31, 60) }, new AffixConstraints(Prefix, Rare, 25, Circlet, WeaponType));
    public static readonly AffixRange Smoldering1 = new(130, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 2, 3), new(DamageFireMax, 4, 7) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Smoldering2 = new(131, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 2, 3), new(DamageFireMax, 4, 10) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Smoldering3 = new(132, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 2, 3), new(DamageFireMax, 4, 12) }, new AffixConstraints(Prefix, Magic, 27, CharmLarge));
    public static readonly AffixRange Smoldering4 = new(133, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 26, 50), new(DamageFireMax, 61, 90) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Smoking1 = new(134, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 4, 7), new(DamageFireMax, 8, 19) }, new AffixConstraints(Prefix, Magic, 28, CharmGrand));
    public static readonly AffixRange Smoking2 = new(135, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 4, 9), new(DamageFireMax, 11, 19) }, new AffixConstraints(Prefix, Magic, 64, CharmSmall));
    public static readonly AffixRange Smoking3 = new(136, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 4, 9), new(DamageFireMax, 13, 27) }, new AffixConstraints(Prefix, Magic, 47, CharmLarge));
    public static readonly AffixRange Smoking4 = new(137, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 51, 80), new(DamageFireMax, 91, 130) }, new AffixConstraints(Prefix, Rare, 47, WeaponType));
    public static readonly AffixRange Flaming1 = new(138, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 8, 18), new(DamageFireMax, 20, 36) }, new AffixConstraints(Prefix, Magic, 43, CharmGrand));
    public static readonly AffixRange Flaming2 = new(139, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 10, 19), new(DamageFireMax, 20, 29) }, new AffixConstraints(Prefix, Magic, 89, CharmSmall));
    public static readonly AffixRange Flaming3 = new(140, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 10, 27), new(DamageFireMax, 28, 43) }, new AffixConstraints(Prefix, Magic, 75, CharmLarge));
    public static readonly AffixRange Flaming4 = new(141, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 81, 120), new(DamageFireMax, 131, 180) }, new AffixConstraints(Prefix, Rare, 61, WeaponType));
    public static readonly AffixRange Condensing = new(142, "Condensing", AffixClass.DamageFire, new ModifierRange[] { new(DamageFireMin, 121, 170), new(DamageFireMax, 181, 240) }, new AffixConstraints(Prefix, Rare, 77, WeaponType));
    public static readonly AffixRange Static1 = new(143, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 4, 5) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Static2 = new(144, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 5, 9) }, new AffixConstraints(Prefix, Magic, 14, CharmLarge));
    public static readonly AffixRange Static3 = new(145, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 6, 11) }, new AffixConstraints(Prefix, Magic, 23, CharmSmall));
    public static readonly AffixRange Static4 = new(146, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 49, 120) }, new AffixConstraints(Prefix, Rare, 25, Circlet, WeaponType));
    public static readonly AffixRange Glowing1 = new(158, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 6, 17) }, new AffixConstraints(Prefix, Magic, 14, CharmGrand));
    public static readonly AffixRange Glowing2 = new(159, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 10, 26) }, new AffixConstraints(Prefix, Magic, 28, CharmLarge));
    public static readonly AffixRange Glowing3 = new(160, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 12, 24) }, new AffixConstraints(Prefix, Magic, 41, CharmSmall));
    public static readonly AffixRange Glowing4 = new(161, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 121, 180) }, new AffixConstraints(Prefix, Rare, 34, WeaponType));
    public static readonly AffixRange Buzzing = new(147, "Buzzing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 181, 260) }, new AffixConstraints(Prefix, Rare, 46, WeaponType));
    public static readonly AffixRange Arcing1 = new(148, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 18, 44) }, new AffixConstraints(Prefix, Magic, 29, CharmGrand));
    public static readonly AffixRange Arcing2 = new(149, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 25, 43) }, new AffixConstraints(Prefix, Magic, 65, CharmSmall));
    public static readonly AffixRange Arcing3 = new(150, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 27, 58) }, new AffixConstraints(Prefix, Magic, 49, CharmLarge));
    public static readonly AffixRange Arcing4 = new(151, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 261, 360) }, new AffixConstraints(Prefix, Rare, 70, WeaponType));
    public static readonly AffixRange Shocking1 = new(152, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 44, 71) }, new AffixConstraints(Prefix, Magic, 90, CharmSmall));
    public static readonly AffixRange Shocking2 = new(153, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 45, 79) }, new AffixConstraints(Prefix, Magic, 44, CharmGrand));
    public static readonly AffixRange Shocking3 = new(154, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 59, 90) }, new AffixConstraints(Prefix, Magic, 68, CharmLarge));
    public static readonly AffixRange Shocking4 = new(155, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightningMin, 1, 1), new(DamageLightningMax, 361, 480) }, new AffixConstraints(Prefix, Rare, 76, WeaponType));
}