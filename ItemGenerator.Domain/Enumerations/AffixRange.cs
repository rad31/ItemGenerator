using ItemGenerator.Domain.Common;
using ItemGenerator.Domain.ValueObjects;
using static ItemGenerator.Domain.Enumerations.AffixType;
using static ItemGenerator.Domain.Enumerations.ItemType;
using static ItemGenerator.Domain.Enumerations.ModifierType;
using static ItemGenerator.Domain.Enumerations.Rarity;

namespace ItemGenerator.Domain.Enumerations;

public sealed class AffixRange : Enumeration<AffixRange>
{
    public readonly AffixClass AffixClass;
    public readonly ModifierRange[] Modifiers;
    public readonly AffixConstraints Constraints;
    private AffixRange(
        ushort value,
        string name,
        AffixClass affixClass,
        ModifierRange[] itemModifiers,
        AffixConstraints constraints)
        : base(value, name)
    {
        AffixClass = affixClass;
        Modifiers = itemModifiers;
        Constraints = constraints;
    }

    #region Prefixes

    public static readonly AffixRange Mechanics = new(0, "Mechanic's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, new ushort[]{1}, new ushort[]{2}) }, new AffixConstraints(Prefix, Rare, 10, BodyArmor, HelmType, ShieldType, WeaponType));
    public static readonly AffixRange Artisans = new(1, "Artisan's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Prefix, Magic, 33, BodyArmor, HelmType, ShieldType, WeaponType));
    public static readonly AffixRange Jewelers1 = new(2, "Jeweler's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, new ushort[]{4}, new ushort[]{4}) }, new AffixConstraints(Prefix, Magic, 55, BodyArmor, ShieldType, WeaponType));
    public static readonly AffixRange Jewelers2 = new(3, "Jeweler's", AffixClass.AddSockets, new ModifierRange[] { new(AddSockets, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Prefix, Magic, 55, HelmType));
    public static readonly AffixRange Bronze1 = new(4, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{2}, new ushort[]{4}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Bronze2 = new(5, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{6}, new ushort[]{12}) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Bronze3 = new(6, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{10}, new ushort[]{20}) }, new AffixConstraints(Prefix, Rare, 1, Amulet, Circlet, Gloves, Ring, WeaponType));
    public static readonly AffixRange Bronze4 = new(7, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{4}, new ushort[]{8}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Bronze5 = new(8, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{6}, new ushort[]{12}) }, new AffixConstraints(Prefix, Magic, 7, CharmLarge));
    public static readonly AffixRange Bronze6 = new(9, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{13}, new ushort[]{25}) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Bronze7 = new(10, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{6}, new ushort[]{12}) }, new AffixConstraints(Prefix, Magic, 1, CharmGrand));
    public static readonly AffixRange Bronze8 = new(11, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{13}, new ushort[]{27}) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Bronze9 = new(12, "Bronze", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{28}, new ushort[]{42}) }, new AffixConstraints(Prefix, Magic, 13, CharmGrand));
    public static readonly AffixRange Iron1 = new(13, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{13}, new ushort[]{24}) }, new AffixConstraints(Prefix, Magic, 39, CharmSmall));
    public static readonly AffixRange Iron2 = new(14, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{21}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 4, Circlet, Ring, WeaponType));
    public static readonly AffixRange Iron3 = new(15, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{26}, new ushort[]{38}) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Iron4 = new(16, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{39}, new ushort[]{51}) }, new AffixConstraints(Prefix, Magic, 34, CharmLarge));
    public static readonly AffixRange Iron5 = new(17, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{43}, new ushort[]{57}) }, new AffixConstraints(Prefix, Magic, 19, CharmGrand));
    public static readonly AffixRange Iron6 = new(18, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{58}, new ushort[]{72}) }, new AffixConstraints(Prefix, Magic, 25, CharmGrand));
    public static readonly AffixRange Iron7 = new(19, "Iron", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{73}, new ushort[]{87}) }, new AffixConstraints(Prefix, Magic, 31, CharmGrand));
    public static readonly AffixRange Steel1 = new(20, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{25}, new ushort[]{36}) }, new AffixConstraints(Prefix, Magic, 57, CharmGrand));
    public static readonly AffixRange Steel2 = new(21, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{41}, new ushort[]{60}) }, new AffixConstraints(Prefix, Rare, 8, Circlet, Ring, WeaponType));
    public static readonly AffixRange Steel3 = new(22, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{52}, new ushort[]{64}) }, new AffixConstraints(Prefix, Magic, 43, CharmLarge));
    public static readonly AffixRange Steel4 = new(23, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{65}, new ushort[]{77}) }, new AffixConstraints(Prefix, Magic, 52, CharmLarge));
    public static readonly AffixRange Steel5 = new(24, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{88}, new ushort[]{102}) }, new AffixConstraints(Prefix, Magic, 37, CharmGrand));
    public static readonly AffixRange Steel6 = new(25, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{103}, new ushort[]{117}) }, new AffixConstraints(Prefix, Magic, 43, CharmGrand));
    public static readonly AffixRange Steel7 = new(26, "Steel", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{118}, new ushort[]{132}) }, new AffixConstraints(Prefix, Magic, 49, CharmGrand));
    public static readonly AffixRange Silver1 = new(27, "Silver", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{41}, new ushort[]{60}) }, new AffixConstraints(Prefix, Rare, 25, Jewel));
    public static readonly AffixRange Silver2 = new(28, "Silver", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{61}, new ushort[]{80}) }, new AffixConstraints(Prefix, Rare, 12, Circlet, Ring, WeaponType));
    public static readonly AffixRange Gold = new(29, "Gold", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{81}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 17, Circlet, Ring, WeaponType));
    public static readonly AffixRange Platinum = new(30, "Platinum", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{101}, new ushort[]{120}) }, new AffixConstraints(Prefix, Rare, 22, Circlet, Ring, WeaponType));
    public static readonly AffixRange Meteoric = new(31, "Meteoric", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{121}, new ushort[]{150}) }, new AffixConstraints(Prefix, Rare, 49, WeaponType));
    public static readonly AffixRange Strange = new(32, "Strange", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{151}, new ushort[]{300}) }, new AffixConstraints(Prefix, Rare, 49, WeaponType));
    public static readonly AffixRange Weird = new(33, "Weird", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{301}, new ushort[]{450}) }, new AffixConstraints(Prefix, Magic, 49, WeaponType));
    public static readonly AffixRange Tin = new(34, "Tin", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{21}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 49, Jewel));
    public static readonly AffixRange Argent = new(35, "Argent", AffixClass.AttackRating, new ModifierRange[] { new(AttackRating, new ushort[]{61}, new ushort[]{100}) }, new AffixConstraints(Prefix, Magic, 49, Jewel));
    public static readonly AffixRange Hawkeye = new(36, "Hawkeye", AffixClass.AttackRatingBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingBasedOnCharacterLevel, new ushort[]{150}, new ushort[]{150}) }, new AffixConstraints(Prefix, Magic, 35, WeaponType)); // 1.5 not 15
    public static readonly AffixRange Visionary = new(37, "Visionary", AffixClass.AttackRatingPercentBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingPercentBasedOnCharacterLevel, new ushort[]{100}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 25, HelmType, MissileType));
    public static readonly AffixRange Sharp1 = new(38, "Sharp", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{10}, new ushort[]{20}), new(DamageEnhanced, new ushort[]{10}, new ushort[]{20}) }, new AffixConstraints(Prefix, Rare, 5, WeaponType));
    public static readonly AffixRange Sharp2 = new(39, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{21}, new ushort[]{48}), new(DamagePhysical, new ushort[]{0, 4}, new ushort[]{0, 6}) }, new AffixConstraints(Prefix, Magic, 28, CharmLarge));
    public static readonly AffixRange Sharp3 = new(40, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{49}, new ushort[]{76}), new(DamagePhysical, new ushort[]{0, 7}, new ushort[]{0, 10}) }, new AffixConstraints(Prefix, Magic, 29, CharmGrand));
    public static readonly AffixRange Fine1 = new(41, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{49}, new ushort[]{76}), new(DamagePhysical, new ushort[]{0, 7}, new ushort[]{0, 10}) }, new AffixConstraints(Prefix, Magic, 19, CharmLarge));
    public static readonly AffixRange Fine2 = new(42, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{49}, new ushort[]{76}), new(DamagePhysical, new ushort[]{0, 7}, new ushort[]{0, 10}) }, new AffixConstraints(Prefix, Magic, 28, CharmSmall));
    public static readonly AffixRange Fine3 = new(43, "Sharp", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{21}, new ushort[]{40}), new(DamageEnhanced, new ushort[]{0, 21}, new ushort[]{0, 30}) }, new AffixConstraints(Prefix, Rare, 12, WeaponType));
    public static readonly AffixRange Fine4 = new(44, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{10}, new ushort[]{20}), new(DamagePhysical, new ushort[]{0, 1}, new ushort[]{0, 3}) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Fine5 = new(45, "Sharp", AffixClass.AttackRatingAndMaxDamage, new ModifierRange[] { new(AttackRating, new ushort[]{21}, new ushort[]{48}), new(DamagePhysical, new ushort[]{0, 4}, new ushort[]{0, }) }, new AffixConstraints(Prefix, Magic, 22, CharmGrand));
    public static readonly AffixRange Warriors = new(46, "Warrior's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{41}, new ushort[]{60}), new(DamageEnhanced, new ushort[]{31}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 19, WeaponType));
    public static readonly AffixRange Soldiers = new(47, "Soldier's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{61}, new ushort[]{80}), new(DamageEnhanced, new ushort[]{41}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 27, WeaponType));
    public static readonly AffixRange Knights = new(48, "Knight's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{81}, new ushort[]{100}), new(DamageEnhanced, new ushort[]{51}, new ushort[]{65}) }, new AffixConstraints(Prefix, Rare, 38, WeaponType));
    public static readonly AffixRange Lords = new(49, "Lord's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{101}, new ushort[]{120}), new(DamageEnhanced, new ushort[]{66}, new ushort[]{80}) }, new AffixConstraints(Prefix, Rare, 47, WeaponType));
    public static readonly AffixRange Kings = new(50, "King's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{121}, new ushort[]{150}), new(DamageEnhanced, new ushort[]{81}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 56, WeaponType));
    public static readonly AffixRange Masters = new(51, "Master's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{151}, new ushort[]{250}), new(DamageEnhanced, new ushort[]{101}, new ushort[]{150}) }, new AffixConstraints(Prefix, Rare, 56, WeaponType));
    public static readonly AffixRange GrandMasters = new(52, "GrandMaster's", AffixClass.AttackRatingAndEnhancedDamage, new ModifierRange[] { new(AttackRating, new ushort[]{151}, new ushort[]{250}), new(DamageEnhanced, new ushort[]{101}, new ushort[]{150}) }, new AffixConstraints(Prefix, Magic, 69, WeaponType));
    public static readonly AffixRange Fools = new(53, "Fool's", AffixClass.AttackRatingAndMaxDamageBasedOnCharacterLevel, new ModifierRange[] { new(AttackRatingBasedOnCharacterLevel, new ushort[]{1650}, new ushort[]{1650}), new(DamagePhysicalBasedOnCharacterLevel, new ushort[]{0, 50}, new ushort[]{0, 50}) }, new AffixConstraints(Prefix, Rare, 50, WeaponType));
    public static readonly AffixRange Lunar = new(54, "Lunar", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{25}, new ushort[]{50}), new(DamageEnhancedVsDemons, new ushort[]{10}, new ushort[]{25}) }, new AffixConstraints(Prefix, Rare, 3, Circlet, WeaponType));
    public static readonly AffixRange Diamond = new(55, "Diamond", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{25}, new ushort[]{50}), new(DamageEnhancedVsDemons, new ushort[]{25}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 26, Jewel));
    public static readonly AffixRange Arcadian = new(56, "Arcadian", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{51}, new ushort[]{100}), new(DamageEnhancedVsDemons, new ushort[]{26}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 15, Circlet, WeaponType));
    public static readonly AffixRange Unearthly = new(57, "Unearthly", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{101}, new ushort[]{150}), new(DamageEnhancedVsDemons, new ushort[]{51}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 25, WeaponType));
    public static readonly AffixRange Astral = new(58, "Astral", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{151}, new ushort[]{200}), new(DamageEnhancedVsDemons, new ushort[]{101}, new ushort[]{151}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Elysian = new(59, "Elysian", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{201}, new ushort[]{300}), new(DamageEnhancedVsDemons, new ushort[]{151}, new ushort[]{200}) }, new AffixConstraints(Prefix, Rare, 45, WeaponType));
    public static readonly AffixRange Celestial = new(60, "Celestial", AffixClass.AttackRatingAndEnhancedDamageVsDemons, new ModifierRange[] { new(AttackRatingVsDemons, new ushort[]{301}, new ushort[]{400}), new(DamageEnhancedVsDemons, new ushort[]{201}, new ushort[]{300}) }, new AffixConstraints(Prefix, Magic, 55, WeaponType));
    public static readonly AffixRange Pearl = new(61, "Pearl", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{25}, new ushort[]{50}), new(DamageEnhancedVsUndead, new ushort[]{25}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 1, Jewel));
    public static readonly AffixRange Consecrated = new(62, "Consecrated", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{25}, new ushort[]{75}), new(DamageEnhancedVsUndead, new ushort[]{25}, new ushort[]{75}) }, new AffixConstraints(Prefix, Rare, 15, WeaponType));
    public static readonly AffixRange Pure = new(63, "Pure", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{76}, new ushort[]{175}), new(DamageEnhancedVsUndead, new ushort[]{76}, new ushort[]{125}) }, new AffixConstraints(Prefix, Rare, 25, WeaponType));
    public static readonly AffixRange Sacred = new(64, "Sacred", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{176}, new ushort[]{250}), new(DamageEnhancedVsUndead, new ushort[]{126}, new ushort[]{200}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Hallowed = new(65, "Hallowed", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{251}, new ushort[]{325}), new(DamageEnhancedVsUndead, new ushort[]{201}, new ushort[]{275}) }, new AffixConstraints(Prefix, Rare, 45, WeaponType));
    public static readonly AffixRange Divine = new(66, "Divine", AffixClass.AttackRatingAndEnhancedDamageVsUndead, new ModifierRange[] { new(AttackRatingVsUndead, new ushort[]{326}, new ushort[]{450}), new(DamageEnhancedVsUndead, new ushort[]{276}, new ushort[]{350}) }, new AffixConstraints(Prefix, Magic, 55, WeaponType));
    public static readonly AffixRange Sturdy1 = new(67, "Sturdy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{10}, new ushort[]{20}) }, new AffixConstraints(Prefix, Rare, 1, ArmorType));
    public static readonly AffixRange Sturdy2 = new(68, "Sturdy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{21}, new ushort[]{30}) }, new AffixConstraints(Prefix, Rare, 4, ArmorType));
    public static readonly AffixRange Strong = new(69, "Strong", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{31}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 9, ArmorType));
    public static readonly AffixRange Glorious = new(70, "Glorious", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{41}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 19, ArmorType));
    public static readonly AffixRange Blessed = new(71, "Blessed", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{51}, new ushort[]{65})}, new AffixConstraints(Prefix, Rare, 25, ArmorType));
    public static readonly AffixRange Saintly = new(72, "Saintly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{66}, new ushort[]{80}) }, new AffixConstraints(Prefix, Rare, 31, ArmorType));
    public static readonly AffixRange Holy = new(73, "Holy", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{81}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 36, ArmorType));
    public static readonly AffixRange Godly1 = new(74, "Godly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{101}, new ushort[]{200}) }, new AffixConstraints(Prefix, Rare, 50, ArmorType));
    public static readonly AffixRange Godly2 = new(75, "Godly", AffixClass.DefenseEnhanced, new ModifierRange[] { new(DefenseEnhanced, new ushort[]{101}, new ushort[]{200}) }, new AffixConstraints(Prefix, Magic, 45, ArmorType));
    public static readonly AffixRange Stout1 = new(76, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Stout2 = new(77, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{4}, new ushort[]{8}) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Stout3 = new(78, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{2}, new ushort[]{3}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Stout4 = new(79, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{4}, new ushort[]{6}) }, new AffixConstraints(Prefix, Magic, 14, CharmLarge));
    public static readonly AffixRange Stout5 = new(80, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{8}, new ushort[]{12}) }, new AffixConstraints(Prefix, Magic, 20, CharmLarge));
    public static readonly AffixRange Stout6 = new(81, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{3}, new ushort[]{5}) }, new AffixConstraints(Prefix, Magic, 1, CharmGrand));
    public static readonly AffixRange Stout7 = new(82, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{6}, new ushort[]{9}) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Stout8 = new(83, "Stout", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{10}, new ushort[]{12}) }, new AffixConstraints(Prefix, Magic, 12, CharmGrand));
    public static readonly AffixRange Burly1 = new(84, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{15}, new ushort[]{20}) }, new AffixConstraints(Prefix, Magic, 36, CharmSmall));
    public static readonly AffixRange Burly2 = new(85, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{13}, new ushort[]{18}) }, new AffixConstraints(Prefix, Magic, 26, CharmLarge));
    public static readonly AffixRange Burly3 = new(86, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{20}, new ushort[]{30}) }, new AffixConstraints(Prefix, Magic, 32, CharmLarge));
    public static readonly AffixRange Burly4 = new(87, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{13}, new ushort[]{15}) }, new AffixConstraints(Prefix, Magic, 17, CharmGrand));
    public static readonly AffixRange Burly5 = new(88, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{16}, new ushort[]{22}) }, new AffixConstraints(Prefix, Magic, 22, CharmGrand));
    public static readonly AffixRange Burly6 = new(89, "Burly", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{23}, new ushort[]{30}) }, new AffixConstraints(Prefix, Magic, 27, CharmGrand));
    public static readonly AffixRange Stalwart1 = new(90, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{20}, new ushort[]{30}) }, new AffixConstraints(Prefix, Magic, 48, CharmSmall));
    public static readonly AffixRange Stalwart2 = new(91, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{30}, new ushort[]{40}) }, new AffixConstraints(Prefix, Magic, 38, CharmLarge));
    public static readonly AffixRange Stalwart3 = new(92, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{45}, new ushort[]{60}) }, new AffixConstraints(Prefix, Magic, 45, CharmLarge));
    public static readonly AffixRange Stalwart4 = new(93, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{33}, new ushort[]{40}) }, new AffixConstraints(Prefix, Magic, 32, CharmGrand));
    public static readonly AffixRange Stalwart5 = new(94, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{44}, new ushort[]{50}) }, new AffixConstraints(Prefix, Magic, 37, CharmGrand));
    public static readonly AffixRange Stalwart6 = new(95, "Stalwart", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{60}, new ushort[]{100}) }, new AffixConstraints(Prefix, Magic, 42, CharmGrand));
    public static readonly AffixRange Blanched = new(96, "Blanched", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{5}, new ushort[]{8}) }, new AffixConstraints(Prefix, Rare, 1, Jewel));
    public static readonly AffixRange Eburine = new(97, "Eburine", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{9}, new ushort[]{20}) }, new AffixConstraints(Prefix, Rare, 16, Jewel));
    public static readonly AffixRange Bone = new(98, "Bone", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{21}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 32, Jewel));
    public static readonly AffixRange Ivory = new(99, "Ivory", AffixClass.Defense, new ModifierRange[] { new(Defense, new ushort[]{41}, new ushort[]{64}) }, new AffixConstraints(Prefix, Magic, 64, Jewel));
    public static readonly AffixRange Faithful1 = new(100, "Faithful", AffixClass.DefenseBasedOnCharacterLevel, new ModifierRange[] { new(DefenseBasedOnCharacterLevel, new ushort[]{300}, new ushort[]{300}) }, new AffixConstraints(Prefix, Rare, 30, BodyArmor));
    public static readonly AffixRange Faithful2 = new(101, "Faithful", AffixClass.DefenseBasedOnCharacterLevel, new ModifierRange[] { new(DefenseBasedOnCharacterLevel, new ushort[]{50}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 30, Belt, Boots, Gloves, ShieldType));
    public static readonly AffixRange Snowy1 = new(102, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{1, 2}, new ushort[]{1, 3}) }, new AffixConstraints(Prefix, Magic, 9, CharmGrand));
    public static readonly AffixRange Snowy2 = new(103, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{1, 2}, new ushort[]{2, 4}) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Snowy3 = new(104, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{2, 3}, new ushort[]{3, 5}) }, new AffixConstraints(Prefix, Magic, 18, CharmLarge));
    public static readonly AffixRange Snowy4 = new(105, "Snowy", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{6, 19}, new ushort[]{9, 30}) }, new AffixConstraints(Prefix, Rare, 26, Circlet, WeaponType));
    public static readonly AffixRange Shivering1 = new(106, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{2, 4}, new ushort[]{4, 8}) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Shivering2 = new(107, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{3, 5}, new ushort[]{4, 8}) }, new AffixConstraints(Prefix, Magic, 42, CharmSmall));
    public static readonly AffixRange Shivering3 = new(108, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{4, 6}, new ushort[]{5, 10}) }, new AffixConstraints(Prefix, Magic, 29, CharmLarge));
    public static readonly AffixRange Shivering4 = new(109, "Shivering", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{10, 31}, new ushort[]{15, 45}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Boreal1 = new(110, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{5, 9}, new ushort[]{7, 14}) }, new AffixConstraints(Prefix, Magic, 66, CharmSmall));
    public static readonly AffixRange Boreal2 = new(111, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{5, 9}, new ushort[]{7, 15}) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Boreal3 = new(112, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{6, 11}, new ushort[]{10, 20}) }, new AffixConstraints(Prefix, Magic, 49, CharmLarge));
    public static readonly AffixRange Boreal4 = new(113, "Boreal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{16, 46}, new ushort[]{23, 90}) }, new AffixConstraints(Prefix, Rare, 50, WeaponType));
    public static readonly AffixRange Hibernal1 = new(114, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{8, 15}, new ushort[]{10, 20}) }, new AffixConstraints(Prefix, Magic, 91, CharmSmall));
    public static readonly AffixRange Hibernal2 = new(115, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{8, 16}, new ushort[]{13, 25}) }, new AffixConstraints(Prefix, Magic, 45, CharmGrand));
    public static readonly AffixRange Hibernal3 = new(116, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{11, 21}, new ushort[]{15, 30}) }, new AffixConstraints(Prefix, Magic, 69, CharmLarge));
    public static readonly AffixRange Hibernal4 = new(117, "Hibernal", AffixClass.DamageCold, new ModifierRange[] { new(DamageCold, new ushort[]{24, 91}, new ushort[]{45, 140}) }, new AffixConstraints(Prefix, Rare, 70, WeaponType));
    public static readonly AffixRange Ember1 = new(118, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{1, 2}, new ushort[]{1, 3}) }, new AffixConstraints(Prefix, Magic, 21, CharmSmall));
    public static readonly AffixRange Ember2 = new(119, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{1, 2}, new ushort[]{1, 3}) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Ember3 = new(120, "Ember", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{1, 2}, new ushort[]{1, 3}) }, new AffixConstraints(Prefix, Magic, 13, CharmLarge));
    public static readonly AffixRange Fiery = new(121, "Fiery", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{16, 31}, new ushort[]{25, 60}) }, new AffixConstraints(Prefix, Rare, 25, Circlet, WeaponType));
    public static readonly AffixRange Smoldering1 = new(122, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{2, 4}, new ushort[]{3, 7}) }, new AffixConstraints(Prefix, Magic, 15, CharmGrand));
    public static readonly AffixRange Smoldering2 = new(123, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{2, 4}, new ushort[]{3, 10}) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Smoldering3 = new(124, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{2, 4}, new ushort[]{3, 12}) }, new AffixConstraints(Prefix, Magic, 27, CharmLarge));
    public static readonly AffixRange Smoldering4 = new(125, "Smoldering", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{26, 61}, new ushort[]{50, 90}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Smoking1 = new(126, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{4, 8}, new ushort[]{7, 19}) }, new AffixConstraints(Prefix, Magic, 28, CharmGrand));
    public static readonly AffixRange Smoking2 = new(127, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{4, 11}, new ushort[]{9, 19}) }, new AffixConstraints(Prefix, Magic, 64, CharmSmall));
    public static readonly AffixRange Smoking3 = new(128, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{4, 13}, new ushort[]{9, 27}) }, new AffixConstraints(Prefix, Magic, 47, CharmLarge));
    public static readonly AffixRange Smoking4 = new(129, "Smoking", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{51, 91}, new ushort[]{80, 130}) }, new AffixConstraints(Prefix, Rare, 47, WeaponType));
    public static readonly AffixRange Flaming1 = new(130, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{8, 20}, new ushort[]{18, 36}) }, new AffixConstraints(Prefix, Magic, 43, CharmGrand));
    public static readonly AffixRange Flaming2 = new(131, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{10, 20}, new ushort[]{19, 29}) }, new AffixConstraints(Prefix, Magic, 89, CharmSmall));
    public static readonly AffixRange Flaming3 = new(132, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{10, 28}, new ushort[]{27, 43}) }, new AffixConstraints(Prefix, Magic, 75, CharmLarge));
    public static readonly AffixRange Flaming4 = new(133, "Flaming", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{81, 131}, new ushort[]{120, 180}) }, new AffixConstraints(Prefix, Rare, 61, WeaponType));
    public static readonly AffixRange Condensing = new(134, "Condensing", AffixClass.DamageFire, new ModifierRange[] { new(DamageFire, new ushort[]{121, 181}, new ushort[]{170, 240}) }, new AffixConstraints(Prefix, Rare, 77, WeaponType));
    public static readonly AffixRange Static1 = new(135, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 4}, new ushort[]{1, 5}) }, new AffixConstraints(Prefix, Magic, 7, CharmGrand));
    public static readonly AffixRange Static2 = new(136, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 5}, new ushort[]{1, 9}) }, new AffixConstraints(Prefix, Magic, 14, CharmLarge));
    public static readonly AffixRange Static3 = new(137, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 6}, new ushort[]{1, 11}) }, new AffixConstraints(Prefix, Magic, 23, CharmSmall));
    public static readonly AffixRange Static4 = new(138, "Static", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 49}, new ushort[]{1, 120}) }, new AffixConstraints(Prefix, Rare, 25, Circlet, WeaponType));
    public static readonly AffixRange Glowing1 = new(139, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 6}, new ushort[]{1, 17}) }, new AffixConstraints(Prefix, Magic, 14, CharmGrand));
    public static readonly AffixRange Glowing2 = new(140, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 10}, new ushort[]{1, 26}) }, new AffixConstraints(Prefix, Magic, 28, CharmLarge));
    public static readonly AffixRange Glowing3 = new(141, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 12}, new ushort[]{1, 24}) }, new AffixConstraints(Prefix, Magic, 41, CharmSmall));
    public static readonly AffixRange Glowing4 = new(142, "Glowing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 121}, new ushort[]{1, 180}) }, new AffixConstraints(Prefix, Rare, 34, WeaponType));
    public static readonly AffixRange Buzzing = new(143, "Buzzing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 181}, new ushort[]{1, 260}) }, new AffixConstraints(Prefix, Rare, 46, WeaponType));
    public static readonly AffixRange Arcing1 = new(144, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 18}, new ushort[]{1, 44}) }, new AffixConstraints(Prefix, Magic, 29, CharmGrand));
    public static readonly AffixRange Arcing2 = new(145, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 25}, new ushort[]{1, 43}) }, new AffixConstraints(Prefix, Magic, 65, CharmSmall));
    public static readonly AffixRange Arcing3 = new(146, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 27}, new ushort[]{1, 58}) }, new AffixConstraints(Prefix, Magic, 49, CharmLarge));
    public static readonly AffixRange Arcing4 = new(147, "Arcing", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 261}, new ushort[]{1, 360}) }, new AffixConstraints(Prefix, Rare, 70, WeaponType));
    public static readonly AffixRange Shocking1 = new(148, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 44}, new ushort[]{1, 71}) }, new AffixConstraints(Prefix, Magic, 90, CharmSmall));
    public static readonly AffixRange Shocking2 = new(149, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 45}, new ushort[]{1, 79}) }, new AffixConstraints(Prefix, Magic, 44, CharmGrand));
    public static readonly AffixRange Shocking3 = new(150, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 59}, new ushort[]{1, 90}) }, new AffixConstraints(Prefix, Magic, 68, CharmLarge));
    public static readonly AffixRange Shocking4 = new(151, "Shocking", AffixClass.DamageLightning, new ModifierRange[] { new(DamageLightning, new ushort[]{1, 361}, new ushort[]{1, 480}) }, new AffixConstraints(Prefix, Rare, 76, WeaponType));
    public static readonly AffixRange Septic1 = new(152, "Septic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{5, 3}, new ushort[]{5, 3}) }, new AffixConstraints(Prefix, Magic, 1, CharmGrand));
    public static readonly AffixRange Septic2 = new(153, "Septic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{6, 2}, new ushort[]{6, 2}) }, new AffixConstraints(Prefix, Rare, 1, Circlet, WeaponType));
    public static readonly AffixRange Septic3 = new(154, "Septic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{10, 3}, new ushort[]{10, 3}) }, new AffixConstraints(Prefix, Magic, 9, CharmLarge));
    public static readonly AffixRange Septic4 = new(155, "Septic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{15, 3}, new ushort[]{15, 3}) }, new AffixConstraints(Prefix, Magic, 18, CharmSmall));
    public static readonly AffixRange Foul1 = new(156, "Foul", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{12, 3}, new ushort[]{12, 4}) }, new AffixConstraints(Prefix, Rare, 10, WeaponType));
    public static readonly AffixRange Foul2 = new(157, "Foul", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{15, 4}, new ushort[]{15, 4}) }, new AffixConstraints(Prefix, Magic, 12, CharmGrand));
    public static readonly AffixRange Foul3 = new(158, "Foul", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{30, 4}, new ushort[]{30, 4}) }, new AffixConstraints(Prefix, Magic, 26, CharmLarge));
    public static readonly AffixRange Foul4 = new(159, "Foul", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{50, 4}, new ushort[]{50, 4}) }, new AffixConstraints(Prefix, Magic, 39, CharmSmall));
    public static readonly AffixRange Corrosive = new(160, "Corrosive", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{80, 4}, new ushort[]{80, 4}) }, new AffixConstraints(Prefix, Rare, 20, WeaponType));
    public static readonly AffixRange Toxic1 = new(161, "Toxic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{50, 6}, new ushort[]{50, 6}) }, new AffixConstraints(Prefix, Magic, 27, CharmGrand));
    public static readonly AffixRange Toxic2 = new(162, "Toxic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{90, 5}, new ushort[]{90, 5}) }, new AffixConstraints(Prefix, Magic, 46, CharmLarge));
    public static readonly AffixRange Toxic3 = new(163, "Toxic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{100, 5}, new ushort[]{100, 5}) }, new AffixConstraints(Prefix, Magic, 63, CharmSmall));
    public static readonly AffixRange Toxic4 = new(164, "Toxic", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{150, 5}, new ushort[]{150, 5}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Pestilent1 = new(165, "Pestilent", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{100, 6}, new ushort[]{100, 6}) }, new AffixConstraints(Prefix, Magic, 42, CharmGrand));
    public static readonly AffixRange Pestilent2 = new(166, "Pestilent", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{175, 6}, new ushort[]{175, 6}) }, new AffixConstraints(Prefix, Magic, 66, CharmLarge));
    public static readonly AffixRange Pestilent3 = new(167, "Pestilent", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{175, 6}, new ushort[]{175, 6}) }, new AffixConstraints(Prefix, Magic, 88, CharmSmall));
    public static readonly AffixRange Pestilent4 = new(168, "Pestilent", AffixClass.DamagePoison, new ModifierRange[] { new(DamagePoison, new ushort[]{275, 6}, new ushort[]{275, 6}) }, new AffixConstraints(Prefix, Magic, 50, WeaponType));
    public static readonly AffixRange Shimmering1 = new(169, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{5, 5, 5, 5}) }, new AffixConstraints(Prefix, Magic, 33, CharmSmall));
    public static readonly AffixRange Shimmering2 = new(170, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{7, 7, 7, 7}) }, new AffixConstraints(Prefix, Rare, 6, ShieldType));
    public static readonly AffixRange Shimmering3 = new(171, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{7, 7, 7, 7}) }, new AffixConstraints(Prefix, Rare, 8, Amulet, Circlet));
    public static readonly AffixRange Shimmering4 = new(172, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{7, 7, 7, 7}) }, new AffixConstraints(Prefix, Rare, 45, Ring));
    public static readonly AffixRange Shimmering5 = new(173, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{5, 5, 5, 5}) }, new AffixConstraints(Prefix, Magic, 17, CharmLarge));
    public static readonly AffixRange Shimmering6 = new(174, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{6, 6, 6, 6}, new ushort[]{8, 8, 8, 8}) }, new AffixConstraints(Prefix, Magic, 34, CharmLarge));
    public static readonly AffixRange Shimmering7 = new(175, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{5, 5, 5, 5}, new ushort[]{10, 10, 10, 10}) }, new AffixConstraints(Prefix, Rare, 34, Jewel));
    public static readonly AffixRange Shimmering8 = new(176, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{3, 3, 3, 3}, new ushort[]{6, 6, 6, 6}) }, new AffixConstraints(Prefix, Magic, 8, CharmGrand));
    public static readonly AffixRange Shimmering9 = new(177, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{8, 8, 8, 8}, new ushort[]{12, 12, 12, 12}) }, new AffixConstraints(Prefix, Magic, 14, CharmGrand));
    public static readonly AffixRange Shimmering10 = new(178, "Shimmering", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{13, 13, 13, 13}, new ushort[]{15, 15, 15, 15}) }, new AffixConstraints(Prefix, Magic, 35, CharmGrand));
    public static readonly AffixRange Rainbow1 = new(179, "Rainbow", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{8, 8, 8, 8}, new ushort[]{11, 11, 11, 11}) }, new AffixConstraints(Prefix, Rare, 18, ShieldType));
    public static readonly AffixRange Rainbow2 = new(180, "Rainbow", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{8, 8, 8, 8}, new ushort[]{11, 11, 11, 11}) }, new AffixConstraints(Prefix, Rare, 21, Amulet, Circlet));
    public static readonly AffixRange Rainbow3 = new(181, "Rainbow", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{8, 8, 8, 8}, new ushort[]{11, 11, 11, 11}) }, new AffixConstraints(Prefix, Rare, 56, Ring));
    public static readonly AffixRange Scintillating1 = new(182, "Scintillating", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{11, 11, 11, 11}, new ushort[]{15, 15, 15, 15}) }, new AffixConstraints(Prefix, Magic, 34, Jewel));
    public static readonly AffixRange Scintillating2 = new(183, "Scintillating", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{12, 12, 12, 12}, new ushort[]{15, 15, 15, 15}) }, new AffixConstraints(Prefix, Rare, 18, ShieldType));
    public static readonly AffixRange Scintillating3 = new(184, "Scintillating", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{12, 12, 12, 12}, new ushort[]{15, 15, 15, 15}) }, new AffixConstraints(Prefix, Rare, 21, Amulet, Circlet));
    public static readonly AffixRange Scintillating4 = new(185, "Scintillating", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{12, 12, 12, 12}, new ushort[]{15, 15, 15, 15}) }, new AffixConstraints(Prefix, Magic, 56, Ring));
    public static readonly AffixRange Prismatic1 = new(186, "Prismatic", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{16, 16, 16, 16}, new ushort[]{20, 20, 20, 20}) }, new AffixConstraints(Prefix, Rare, 39, ShieldType));
    public static readonly AffixRange Prismatic2 = new(187, "Prismatic", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{16, 16, 16, 16}, new ushort[]{20, 20, 20, 20}) }, new AffixConstraints(Prefix, Rare, 42, Amulet, Circlet));
    public static readonly AffixRange Chromatic1 = new(188, "Chromatic", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{21, 21, 21, 21}, new ushort[]{30, 30, 30, 30}) }, new AffixConstraints(Prefix, Magic, 50, ShieldType));
    public static readonly AffixRange Chromatic2 = new(189, "Chromatic", AffixClass.ResistAll, new ModifierRange[] { new(ResistAll, new ushort[]{21, 21, 21, 21}, new ushort[]{30, 30, 30, 30}) }, new AffixConstraints(Prefix, Magic, 55, Amulet, Circlet));
    public static readonly AffixRange Azure1 = new(190, "Azure", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{3, 0, 0, 0}, new ushort[]{5, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Azure2 = new(191, "Azure", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{4, 0, 0, 0}, new ushort[]{7, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Azure3 = new(192, "Azure", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{7, 0, 0, 0}, new ushort[]{15, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Azure4 = new(193, "Azure", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{5, 0, 0, 0}, new ushort[]{5, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 1, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Azure5 = new(194, "Azure", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{5, 0, 0, 0}, new ushort[]{10, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 5, Amulet, ArmorType, Circlet, Ring, SorceressOrb, WeaponType));
    public static readonly AffixRange Lapis1 = new(195, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{6, 0, 0, 0}, new ushort[]{7, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 14, CharmSmall));
    public static readonly AffixRange Lapis2 = new(196, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{8, 0, 0, 0}, new ushort[]{10, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Lapis3 = new(197, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{16, 0, 0, 0}, new ushort[]{20, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 10, CharmGrand));
    public static readonly AffixRange Lapis4 = new(198, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{11, 0, 0, 0}, new ushort[]{20, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 12, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Lapis5 = new(199, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{11, 0, 0, 0}, new ushort[]{20, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Lapis6 = new(200, "Lapis", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{5, 0, 0, 0}, new ushort[]{15, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 2, Jewel));
    public static readonly AffixRange Cobalt1 = new(201, "Cobalt", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{8, 0, 0, 0}, new ushort[]{9, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Cobalt2 = new(202, "Cobalt", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{11, 0, 0, 0}, new ushort[]{12, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Cobalt3 = new(203, "Cobalt", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{21, 0, 0, 0}, new ushort[]{25, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 20, CharmGrand));
    public static readonly AffixRange Cobalt4 = new(204, "Cobalt", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{21, 0, 0, 0}, new ushort[]{30, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 18, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Cobalt5 = new(205, "Cobalt", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{21, 0, 0, 0}, new ushort[]{30, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 55, WeaponType));
    public static readonly AffixRange Sapphire1 = new(206, "Sapphire", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{10, 0, 0, 0}, new ushort[]{11, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Sapphire2 = new(207, "Sapphire", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{13, 0, 0, 0}, new ushort[]{15, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 35, CharmLarge));
    public static readonly AffixRange Sapphire3 = new(208, "Sapphire", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{26, 0, 0, 0}, new ushort[]{30, 0, 0, 0}) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Sapphire4 = new(209, "Sapphire", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{31, 0, 0, 0}, new ushort[]{40, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 25, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Sapphire5 = new(210, "Sapphire", AffixClass.ResistCold, new ModifierRange[] { new(ResistAll, new ushort[]{16, 0, 0, 0}, new ushort[]{30, 0, 0, 0}) }, new AffixConstraints(Prefix, Rare, 19, Jewel));
    public static readonly AffixRange Crimson1 = new(211, "Crimson", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 3, 0, 0}, new ushort[]{0, 5, 0, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Crimson2 = new(212, "Crimson", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 4, 0, 0}, new ushort[]{0, 7, 0, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Crimson3 = new(213, "Crimson", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 7, 0, 0}, new ushort[]{0, 15, 0, 0}) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Crimson4 = new(214, "Crimson", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 5, 0, 0}, new ushort[]{0, 5, 0, 0}) }, new AffixConstraints(Prefix, Rare, 1, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Crimson5 = new(215, "Crimson", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 5, 0, 0}, new ushort[]{0, 10, 0, 0}) }, new AffixConstraints(Prefix, Rare, 5, Amulet, ArmorType, Circlet, Ring, SorceressOrb, WeaponType));
    public static readonly AffixRange Russet1 = new(216, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 6, 0, 0}, new ushort[]{0, 7, 0, 0}) }, new AffixConstraints(Prefix, Magic, 14, CharmSmall));
    public static readonly AffixRange Russet2 = new(217, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 8, 0, 0}, new ushort[]{0, 10, 0, 0}) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Russet3 = new(218, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 16, 0, 0}, new ushort[]{0, 20, 0, 0}) }, new AffixConstraints(Prefix, Magic, 10, CharmGrand));
    public static readonly AffixRange Russet4 = new(219, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 11, 0, 0}, new ushort[]{0, 20, 0, 0}) }, new AffixConstraints(Prefix, Rare, 12, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Russet5 = new(220, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 11, 0, 0}, new ushort[]{0, 20, 0, 0}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Russet6 = new(221, "Russet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 5, 0, 0}, new ushort[]{0, 15, 0, 0}) }, new AffixConstraints(Prefix, Rare, 2, Jewel));
    public static readonly AffixRange Garnet1 = new(222, "Garnet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 8, 0, 0}, new ushort[]{0, 9, 0, 0}) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Garnet2 = new(223, "Garnet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 11, 0, 0}, new ushort[]{0, 12, 0, 0}) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Garnet3 = new(224, "Garnet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 21, 0, 0}, new ushort[]{0, 25, 0, 0}) }, new AffixConstraints(Prefix, Magic, 20, CharmGrand));
    public static readonly AffixRange Garnet4 = new(225, "Garnet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 21, 0, 0}, new ushort[]{0, 30, 0, 0}) }, new AffixConstraints(Prefix, Rare, 18, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Garnet5 = new(226, "Garnet", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 21, 0, 0}, new ushort[]{0, 30, 0, 0}) }, new AffixConstraints(Prefix, Rare, 55, WeaponType));
    public static readonly AffixRange Ruby1 = new(227, "Ruby", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 10, 0, 0}, new ushort[]{0, 11, 0, 0}) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Ruby2 = new(228, "Ruby", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 13, 0, 0}, new ushort[]{0, 15, 0, 0}) }, new AffixConstraints(Prefix, Magic, 35, CharmLarge));
    public static readonly AffixRange Ruby3 = new(229, "Ruby", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 26, 0, 0}, new ushort[]{0, 30, 0, 0}) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Ruby4 = new(230, "Ruby", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 31, 0, 0}, new ushort[]{0, 40, 0, 0}) }, new AffixConstraints(Prefix, Rare, 25, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Ruby5 = new(231, "Ruby", AffixClass.ResistFire, new ModifierRange[] { new(ResistAll, new ushort[]{0, 16, 0, 0}, new ushort[]{0, 30, 0, 0}) }, new AffixConstraints(Prefix, Rare, 19, Jewel));
    public static readonly AffixRange Tangerine1 = new(232, "Tangerine", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 3, 0}, new ushort[]{0, 0, 3, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Tangerine2 = new(233, "Tangerine", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 4, 0}, new ushort[]{0, 0, 4, 0}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Tangerine3 = new(234, "Tangerine", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 7, 0}, new ushort[]{0, 0, 7, 0}) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Tangerine4 = new(235, "Tangerine", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 5, 0}, new ushort[]{0, 0, 5, 0}) }, new AffixConstraints(Prefix, Rare, 1, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Tangerine5 = new(236, "Tangerine", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 5, 0}, new ushort[]{0, 0, 5, 0}) }, new AffixConstraints(Prefix, Rare, 5, Amulet, ArmorType, Circlet, Ring, SorceressOrb, WeaponType));
    public static readonly AffixRange Ocher1 = new(237, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 6, 0}, new ushort[]{0, 0, 6, 0}) }, new AffixConstraints(Prefix, Magic, 14, CharmSmall));
    public static readonly AffixRange Ocher2 = new(238, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 8, 0}, new ushort[]{0, 0, 8, 0}) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Ocher3 = new(239, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 16, 0}, new ushort[]{0, 0, 16, 0}) }, new AffixConstraints(Prefix, Magic, 10, CharmGrand));
    public static readonly AffixRange Ocher4 = new(240, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 11, 0}, new ushort[]{0, 0, 11, 0}) }, new AffixConstraints(Prefix, Rare, 12, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Ocher5 = new(241, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 11, 0}, new ushort[]{0, 0, 11, 0}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Ocher6 = new(242, "Ocher", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 5, 0}, new ushort[]{0, 0, 5, 0}) }, new AffixConstraints(Prefix, Rare, 2, Jewel));
    public static readonly AffixRange Coral1 = new(243, "Coral", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 8, 0}, new ushort[]{0, 0, 8, 0}) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Coral2 = new(244, "Coral", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 11, 0}, new ushort[]{0, 0, 11, 0}) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Coral3 = new(245, "Coral", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 21, 0}, new ushort[]{0, 0, 21, 0}) }, new AffixConstraints(Prefix, Magic, 20, CharmGrand));
    public static readonly AffixRange Coral4 = new(246, "Coral", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 21, 0}, new ushort[]{0, 0, 21, 0}) }, new AffixConstraints(Prefix, Rare, 18, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Coral5 = new(247, "Coral", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 21, 0}, new ushort[]{0, 0, 21, 0}) }, new AffixConstraints(Prefix, Rare, 55, WeaponType));
    public static readonly AffixRange Amber1 = new(248, "Amber", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 10, 0}, new ushort[]{0, 0, 10, 0}) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Amber2 = new(249, "Amber", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 13, 0}, new ushort[]{0, 0, 13, 0}) }, new AffixConstraints(Prefix, Magic, 35, CharmLarge));
    public static readonly AffixRange Amber3 = new(250, "Amber", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 26, 0}, new ushort[]{0, 0, 26, 0}) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Amber4 = new(251, "Amber", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 31, 0}, new ushort[]{0, 0, 31, 0}) }, new AffixConstraints(Prefix, Rare, 25, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Amber5 = new(252, "Amber", AffixClass.ResistLightning, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 16, 0}, new ushort[]{0, 0, 16, 0}) }, new AffixConstraints(Prefix, Rare, 19, Jewel));
    public static readonly AffixRange Beryl1 = new(253, "Beryl", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 3}, new ushort[]{0, 0, 0, 3}) }, new AffixConstraints(Prefix, Magic, 1, CharmSmall));
    public static readonly AffixRange Beryl2 = new(254, "Beryl", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 4}, new ushort[]{0, 0, 0, 4}) }, new AffixConstraints(Prefix, Magic, 1, CharmLarge));
    public static readonly AffixRange Beryl3 = new(255, "Beryl", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 7}, new ushort[]{0, 0, 0, 7}) }, new AffixConstraints(Prefix, Magic, 5, CharmGrand));
    public static readonly AffixRange Beryl4 = new(256, "Beryl", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 5}, new ushort[]{0, 0, 0, 5}) }, new AffixConstraints(Prefix, Rare, 1, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Beryl5 = new(257, "Beryl", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 5}, new ushort[]{0, 0, 0, 5}) }, new AffixConstraints(Prefix, Rare, 5, Amulet, ArmorType, Circlet, Ring, SorceressOrb, WeaponType));
    public static readonly AffixRange Viridian1 = new(258, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 6}, new ushort[]{0, 0, 0, 6}) }, new AffixConstraints(Prefix, Magic, 14, CharmSmall));
    public static readonly AffixRange Viridian2 = new(259, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 8}, new ushort[]{0, 0, 0, 8}) }, new AffixConstraints(Prefix, Magic, 16, CharmLarge));
    public static readonly AffixRange Viridian3 = new(260, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 16}, new ushort[]{0, 0, 0, 16}) }, new AffixConstraints(Prefix, Magic, 10, CharmGrand));
    public static readonly AffixRange Viridian4 = new(261, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 11}, new ushort[]{0, 0, 0, 11}) }, new AffixConstraints(Prefix, Rare, 12, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Viridian5 = new(262, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 11}, new ushort[]{0, 0, 0, 11}) }, new AffixConstraints(Prefix, Rare, 35, WeaponType));
    public static readonly AffixRange Viridian6 = new(263, "Viridian", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 5}, new ushort[]{0, 0, 0, 5}) }, new AffixConstraints(Prefix, Rare, 2, Jewel));
    public static readonly AffixRange Jade1 = new(264, "Jade", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 8}, new ushort[]{0, 0, 0, 8}) }, new AffixConstraints(Prefix, Magic, 27, CharmSmall));
    public static readonly AffixRange Jade2 = new(265, "Jade", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 11}, new ushort[]{0, 0, 0, 11}) }, new AffixConstraints(Prefix, Magic, 25, CharmLarge));
    public static readonly AffixRange Jade3 = new(266, "Jade", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 21}, new ushort[]{0, 0, 0, 21}) }, new AffixConstraints(Prefix, Magic, 20, CharmGrand));
    public static readonly AffixRange Jade4 = new(267, "Jade", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 21}, new ushort[]{0, 0, 0, 21}) }, new AffixConstraints(Prefix, Rare, 18, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Jade5 = new(268, "Jade", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 21}, new ushort[]{0, 0, 0, 21}) }, new AffixConstraints(Prefix, Rare, 55, WeaponType));
    public static readonly AffixRange Emerald1 = new(269, "Emerald", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 10}, new ushort[]{0, 0, 0, 10}) }, new AffixConstraints(Prefix, Magic, 40, CharmSmall));
    public static readonly AffixRange Emerald2 = new(270, "Emerald", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 13}, new ushort[]{0, 0, 0, 13}) }, new AffixConstraints(Prefix, Magic, 35, CharmLarge));
    public static readonly AffixRange Emerald3 = new(271, "Emerald", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 26}, new ushort[]{0, 0, 0, 26}) }, new AffixConstraints(Prefix, Magic, 30, CharmGrand));
    public static readonly AffixRange Emerald4 = new(272, "Emerald", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 31}, new ushort[]{0, 0, 0, 31}) }, new AffixConstraints(Prefix, Rare, 25, Amulet, ArmorType, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Emerald5 = new(273, "Emerald", AffixClass.ResistPoison, new ModifierRange[] { new(ResistAll, new ushort[]{0, 0, 0, 16}, new ushort[]{0, 0, 0, 16}) }, new AffixConstraints(Prefix, Rare, 19, Jewel));
    public static readonly AffixRange Jagged = new(274, "Jagged", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{10}, new ushort[]{20}) }, new AffixConstraints(Prefix, Rare, 1, Circlet, WeaponType));
    public static readonly AffixRange Deadly = new(275, "Deadly", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{21}, new ushort[]{30}) }, new AffixConstraints(Prefix, Rare, 5, Circlet, WeaponType));
    public static readonly AffixRange Vicious = new(276, "Vicious", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{31}, new ushort[]{40}) }, new AffixConstraints(Prefix, Rare, 8, WeaponType));
    public static readonly AffixRange Brutal = new(277, "Brutal", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{41}, new ushort[]{50}) }, new AffixConstraints(Prefix, Rare, 14, WeaponType));
    public static readonly AffixRange Massive = new(278, "Massive", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{51}, new ushort[]{65}) }, new AffixConstraints(Prefix, Rare, 20, WeaponType));
    public static readonly AffixRange Savage = new(279, "Savage", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{66}, new ushort[]{80}) }, new AffixConstraints(Prefix, Rare, 26, WeaponType));
    public static readonly AffixRange Merciless = new(280, "Merciless", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{81}, new ushort[]{100}) }, new AffixConstraints(Prefix, Rare, 32, WeaponType));
    public static readonly AffixRange Ferocious = new(281, "Ferocious", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{100}, new ushort[]{200}) }, new AffixConstraints(Prefix, Rare, 41, WeaponType));
    public static readonly AffixRange Cruel1 = new(282, "Cruel", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{201}, new ushort[]{300}) }, new AffixConstraints(Prefix, Rare, 56, WeaponType));
    public static readonly AffixRange Cruel2 = new(283, "Cruel", AffixClass.DamageEnhanced, new ModifierRange[] { new(DamageEnhanced, new ushort[]{201}, new ushort[]{300}) }, new AffixConstraints(Prefix, Magic, 51, WeaponType));

    #endregion

    #region Suffixes

    public static readonly AffixRange Piercing = new(284, "Piercing", AffixClass.IgnoreTargetDefense, new ModifierRange[] { new(IgnoreTargetDefense, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 25, AssassinClaws, Dagger, RodType));
    public static readonly AffixRange Bear = new(285, "Bear", AffixClass.Knockback, new ModifierRange[] { new(Knockback, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 8, MeleeType));
    public static readonly AffixRange Vileness = new(286, "Vileness", AffixClass.PreventMonsterHeal, new ModifierRange[] { new(PreventMonsterHeal, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 9, MeleeType));
    public static readonly AffixRange Apprentice = new(287, "Apprentice", AffixClass.CastRate, new ModifierRange[] { new(CastRate, new ushort[]{10}, new ushort[]{10}) }, new AffixConstraints(Suffix, Rare, 5, Amulet, Circlet, Ring, RodType, SorceressOrb));
    public static readonly AffixRange Magus = new(288, "Magus", AffixClass.CastRate, new ModifierRange[] { new(CastRate, new ushort[]{20}, new ushort[]{20}) }, new AffixConstraints(Suffix, Rare, 29, Circlet, RodType, SorceressOrb));
    public static readonly AffixRange Blocking = new(289, "Blocking", AffixClass.BlockRateAndChance, new ModifierRange[] { new(BlockRate, new ushort[]{15}, new ushort[]{15}), new(BlockChance, new ushort[]{10}, new ushort[]{10}) }, new AffixConstraints(Suffix, Rare, 1, ShieldType));
    public static readonly AffixRange Deflecting = new(290, "Deflecting", AffixClass.BlockRateAndChance, new ModifierRange[] { new(BlockRate, new ushort[]{30}, new ushort[]{30}), new(BlockChance, new ushort[]{20}, new ushort[]{20}) }, new AffixConstraints(Suffix, Rare, 11, ShieldType));
    public static readonly AffixRange Truth = new(291, "Truth", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{7}, new ushort[]{7}) }, new AffixConstraints(Suffix, Rare, 44, Jewel));
    public static readonly AffixRange Balance1 = new(292, "Balance", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{5}, new ushort[]{5}) }, new AffixConstraints(Suffix, Magic, 37, CharmSmall));
    public static readonly AffixRange Balance2 = new(293, "Balance", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{8}, new ushort[]{8}) }, new AffixConstraints(Suffix, Magic, 19, CharmLarge));
    public static readonly AffixRange Balance3 = new(294, "Balance", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{12}, new ushort[]{12}) }, new AffixConstraints(Suffix, Magic, 1, CharmGrand));
    public static readonly AffixRange Balance4 = new(295, "Balance", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{10}, new ushort[]{10}) }, new AffixConstraints(Suffix, Rare, 5, ArmorType));
    public static readonly AffixRange Equilibrium = new(296, "Equilibrium", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{17}, new ushort[]{17}) }, new AffixConstraints(Suffix, Rare, 9, Belt, BodyArmor, ShieldType));
    public static readonly AffixRange Stability = new(297, "Stability", AffixClass.HitRecovery, new ModifierRange[] { new(HitRecovery, new ushort[]{24}, new ushort[]{24}) }, new AffixConstraints(Suffix, Rare, 18, Belt, BodyArmor));
    public static readonly AffixRange Readiness1 = new(298, "Readiness", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{10}, new ushort[]{10}) }, new AffixConstraints(Suffix, Rare, 5, WeaponType));
    public static readonly AffixRange Readiness2 = new(299, "Readiness", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{10}, new ushort[]{10}) }, new AffixConstraints(Suffix, Rare, 20, Gloves));
    public static readonly AffixRange Alacrity1 = new(300, "Alacrity", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{20}, new ushort[]{20}) }, new AffixConstraints(Suffix, Rare, 25, WeaponType));
    public static readonly AffixRange Alacrity2 = new(301, "Alacrity", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{20}, new ushort[]{20}) }, new AffixConstraints(Suffix, Rare, 43, Gloves));
    public static readonly AffixRange Swiftness = new(302, "Swiftness", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{30}, new ushort[]{30}) }, new AffixConstraints(Suffix, Rare, 34, MeleeType));
    public static readonly AffixRange Quickness = new(303, "Quickness", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{40}, new ushort[]{40}) }, new AffixConstraints(Suffix, Rare, 46, MeleeType));
    public static readonly AffixRange Fervor = new(304, "Fervor", AffixClass.AttackSpeed, new ModifierRange[] { new(AttackSpeed, new ushort[]{15}, new ushort[]{15}) }, new AffixConstraints(Suffix, Magic, 9, Jewel));
    public static readonly AffixRange Health = new(305, "Health", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 7, Amulet, BodyArmor, Circlet, Ring, ShieldType));
    public static readonly AffixRange Protection1 = new(306, "Protection", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{2}, new ushort[]{2}) }, new AffixConstraints(Suffix, Rare, 18, Amulet, Circlet, Ring));
    public static readonly AffixRange Protection2 = new(307, "Protection", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{2}, new ushort[]{2}) }, new AffixConstraints(Suffix, Rare, 24, BodyArmor, ShieldType));
    public static readonly AffixRange Absorption1 = new(308, "Absorption", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Suffix, Rare, 26, Amulet, Circlet, Ring));
    public static readonly AffixRange Absorption2 = new(309, "Absorption", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Suffix, Rare, 32, BodyArmor, ShieldType));
    public static readonly AffixRange Life1 = new(310, "Life", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{4}, new ushort[]{4}) }, new AffixConstraints(Suffix, Rare, 35, Amulet, Circlet, Ring));
    public static readonly AffixRange Life2 = new(311, "Life", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{4}, new ushort[]{4}) }, new AffixConstraints(Suffix, Rare, 41, BodyArmor, ShieldType));
    public static readonly AffixRange Life3 = new(312, "Life", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{4}, new ushort[]{7}) }, new AffixConstraints(Suffix, Rare, 41, Circlet));
    public static readonly AffixRange Amicae = new(313, "Amicae", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{8}, new ushort[]{15}) }, new AffixConstraints(Suffix, Magic, 51, BodyArmor, Circlet, ShieldType));
    public static readonly AffixRange LifeEverlasting = new(314, "Life Everlasting", AffixClass.DamageReduced, new ModifierRange[] { new(DamageReduced, new ushort[]{10}, new ushort[]{25}) }, new AffixConstraints(Suffix, Magic, 45, Amulet, Circlet));
    public static readonly AffixRange Warding = new(315, "Warding", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 7, Amulet, BodyArmor, Circlet, Ring, ShieldType, SorceressOrb));
    public static readonly AffixRange Sentinel1 = new(316, "Sentinel", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{2}, new ushort[]{2}) }, new AffixConstraints(Suffix, Rare, 18, Amulet, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Sentinel2 = new(317, "Sentinel", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{2}, new ushort[]{2}) }, new AffixConstraints(Suffix, Rare, 24, BodyArmor, ShieldType));
    public static readonly AffixRange Guarding1 = new(318, "Guarding", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Suffix, Rare, 26, Amulet, Circlet, Ring, SorceressOrb));
    public static readonly AffixRange Guarding2 = new(319, "Guarding", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{3}, new ushort[]{3}) }, new AffixConstraints(Suffix, Rare, 32, BodyArmor, ShieldType));
    public static readonly AffixRange Negation1 = new(320, "Negation", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{4}, new ushort[]{6}) }, new AffixConstraints(Suffix, Magic, 41, BodyArmor, Circlet, ShieldType));
    public static readonly AffixRange Negation2 = new(321, "Negation", AffixClass.DamageMagicReduced, new ModifierRange[] { new(DamageMagicReduced, new ushort[]{4}, new ushort[]{6}) }, new AffixConstraints(Suffix, Magic, 42, Amulet, SorceressOrb));
    public static readonly AffixRange Thorns1 = new(322, "Thorns", AffixClass.DamageReflect, new ModifierRange[] { new(DamageReflect, new ushort[]{1}, new ushort[]{1}) }, new AffixConstraints(Suffix, Rare, 1, Belt, BodyArmor, ShieldType));
    public static readonly AffixRange Thorns2 = new(323, "Thorns", AffixClass.DamageReflect, new ModifierRange[] { new(DamageReflect, new ushort[]{1}, new ushort[]{3}) }, new AffixConstraints(Suffix, Rare, 14, Belt, BodyArmor, Circlet, ShieldType));

    #endregion
}
